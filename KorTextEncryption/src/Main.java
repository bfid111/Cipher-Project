


import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/*
 * Copyright (C) 2016 Youngmin ybs5050@psu.edu
 * @author Youngmin ybs5050@psu.edu
 */
public class Main extends javax.swing.JFrame {
    // instance vars
    private static int pressCount = 1;
    /**
     * Creates new form Frame
     */
    public Main() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        Encrypt = new javax.swing.JButton();
        keyArea = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        decryptArea = new javax.swing.JTextArea();
        decryptButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputArea = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        saveButton = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("KorText");
        setIconImages(null);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("false"), this, org.jdesktop.beansbinding.BeanProperty.create("resizable"));
        bindingGroup.addBinding(binding);

        Encrypt.setText("Encrypt");
        Encrypt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                EncryptMousePressed(evt);
            }
        });

        keyArea.setText("                                                                                                 Enter a Key");
        keyArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                keyAreaMouseClicked(evt);
            }
        });

        decryptArea.setColumns(20);
        decryptArea.setRows(5);
        decryptArea.setText("Enter a Text to Decrypt");
        decryptArea.setWrapStyleWord(true);
        decryptArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                decryptAreaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(decryptArea);

        decryptButton.setText("Decrypt");
        decryptButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                decryptButtonMouseClicked(evt);
            }
        });

        inputArea.setColumns(20);
        inputArea.setRows(5);
        inputArea.setText("Enter a Text to Encrypt");
        inputArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                inputAreaMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(inputArea);

        jScrollPane4.setWheelScrollingEnabled(false);

        logArea.setEditable(false);
        logArea.setColumns(20);
        logArea.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        logArea.setLineWrap(true);
        logArea.setRows(5);
        logArea.setToolTipText("");
        logArea.setWrapStyleWord(true);
        logArea.setBorder(null);
        jScrollPane4.setViewportView(logArea);

        saveButton.setText("Save");
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                saveButtonMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Encrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(decryptButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(keyArea)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(keyArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Encrypt)
                    .addComponent(decryptButton)
                    .addComponent(saveButton))
                .addGap(80, 80, 80))
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void keyAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_keyAreaMouseClicked
          keyArea.setText("");// Set blank when clicked
    }//GEN-LAST:event_keyAreaMouseClicked

    private void EncryptMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EncryptMousePressed
          if("Enter a String to Encrypt ".equals(inputArea.getText()) || "".equals(keyArea.getText()) || "".equals(inputArea.getText())){
                JOptionPane.showMessageDialog(null, "Check Your Text Box!");
            }else{
                KorTextConverter KorText1 = new KorTextConverter(inputArea.getText());
                KorText1.convert();
                CipherHandler Cipher1 = new CipherHandler(KorText1.returnConverted(),keyArea.getText().trim());
                Cipher1.encrypt();
                String encrypted = Cipher1.returnEncrypted();
                logArea.append("Cipher # " + pressCount + " =  "+ encrypted + "\n");   
                pressCount++;
                inputArea.setText("Enter a Text to Encrypt");
                keyArea.setText("                                                                                                 Enter a Key");
            }
    }//GEN-LAST:event_EncryptMousePressed

    private void decryptAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_decryptAreaMouseClicked
        decryptArea.setText("");        // Set blank when clicked
    }//GEN-LAST:event_decryptAreaMouseClicked

    private void inputAreaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputAreaMousePressed
        inputArea.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_inputAreaMousePressed

    private void saveButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMousePressed
        try {
            saveFile();        // TODO add your handling code here:
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveButtonMousePressed

    private void decryptButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_decryptButtonMouseClicked
         if("Enter a String to Decrypt ".equals(decryptArea.getText()) || "".equals(keyArea.getText()) || "".equals(decryptArea.getText())){
                JOptionPane.showMessageDialog(null, "Check Your Text Box!");
            }else{
              //  KorTextConverter KorText1 = new KorTextConverter(inputArea.getText());
            //    KorText1.convert();
                CipherHandler Cipher1 = new CipherHandler(decryptArea.getText(),keyArea.getText().trim());
                Cipher1.decrypt();
                String decrypted = Cipher1.returnDecrypted();
                logArea.append("Decrypted Cipher # " + pressCount + " =  "+ decrypted + "\n");   
                pressCount++;
                decryptArea.setText("Enter a Text to Decrypt");
                keyArea.setText("                                                                                                 Enter a Key");
            }
    }//GEN-LAST:event_decryptButtonMouseClicked
    private void saveFile() throws FileNotFoundException{
        String temp = logArea.getText();
        DateFormat dateFormat = new SimpleDateFormat("yyyyMMdd HHmmss");
        Calendar cal = Calendar.getInstance();
        File data = new File(dateFormat.format(cal.getTime()) + ".txt");
        PrintWriter writer = new PrintWriter(data);
     //   String[] splitted = temp.split("    ");
     //   for (String splitted1 : splitted) {
      //      writer.write(splitted1 + "\n");
    //    }
        writer.write(temp);
        writer.close();  
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {// select Look and Feel
        //UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
        UIManager.setLookAndFeel("de.javasoft.plaf.synthetica.SyntheticaBlackEyeLookAndFeel");// SynThetica Theme 
        } //http://www.javasoft.de/synthetica/themes/ <- Theme Source
        catch (Exception ex) {
            ex.printStackTrace();
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main frame = new Main();
                frame.setVisible(true);
                
                System.out.println("hello");
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Encrypt;
    private javax.swing.JTextArea decryptArea;
    private javax.swing.JButton decryptButton;
    private javax.swing.JTextArea inputArea;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField keyArea;
    public static javax.swing.JTextArea logArea;
    private javax.swing.JButton saveButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
